// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id             Int @id @default(autoincrement())
  user_nickname       String
  user_email          String @unique
  user_password       String
  created_at          DateTime @default(now())
  user_level          Int @default(1)
  deleted             Boolean @default(false)
  deleted_at          DateTime?
  free_tier           Boolean @default(false)
  free_tier_expiry    DateTime?
  bills               Bills[]
  pw_reset_token      String?
  reset_token_expiry  DateTime?

  @@map("users")
}

model Bills {
  bill_id             Int @id @default(autoincrement())
  user_id             Int
  user_card           String?
  date_created        DateTime @default(now())
  bill_amount         Float?
  bill_duedate        DateTime?
  bill_paid           Boolean @default(false)
  bill_paiddate       DateTime?
  user                User @relation(fields:[user_id], references:[user_id])

  @@map("bills")
}

model Genres {
  genre_id            Int @id @default(autoincrement())
  genre_name          String
  series              Series_Genres[]

  @@map("genres")
}

enum ContentStatus {
  pre
  prod
  post
}

model Series {
  series_id           Int @id @default(autoincrement())
  series_name         String
  series_status       ContentStatus
  date_created        DateTime @default(now())
  series_upvotes      Int
  series_downvotes    Int
  deleted             Boolean @default(false)
  deleted_at          DateTime?
  completed           Boolean @default(false)
  series_main         String
  series_directors    String
  series_producers    String
  series_thumbnail    String?
  genres              Series_Genres[]
  videos              Videos[]

  @@map("series")
}

model Series_Genres {
  series_id           Int
  genre_id            Int
  series              Series @relation(fields:[series_id], references:[series_id])
  genre               Genres @relation(fields:[genre_id], references:[genre_id])

  @@id([series_id, genre_id])
  @@map("series_genres")
}

model Videos {
  video_id            Int @id @default(autoincrement())
  video_name          String
  date_created        DateTime @default(now())
  deleted             Boolean @default(false)
  deleted_at          DateTime?
  parent_series_id    Int
  video_length        Int
  video_main          String
  video_url           String?
  video_thumbnail     String?
  video_season        Int
  video_episode       Int
  series              Series @relation(fields:[parent_series_id], references:[series_id])

  @@map("videos")
}